Hello, this is my first voice memo and it's Tuesday 11th of April 2.45pm. I gonna use that voice memo for a YouTube video, more like a YouTube tutorial. I hope you guys enjoy it and have fun.Have you ever asked yourself if you can use the new OpenAI chat GTP GPT sorry for answering questions from your own database or Answering stuff which is not Yeah a common use case like Common documentation which gets updated and New stuff because the OpenAI model is obviously trained Onto a huge part of data, but it doesn't know everything and sometimes it comes up with things which are not Existing or not true. So Have you ever thought of? using your own data knowledge or Yeah documentation to ask questions. I'm going to show you how to do it in this video First of all, we're going to use the embeddings of OpenAI to basically Vectorize our text data. So then we use the chroma Vector database to store everything and then long chain to Yeah, ask questions about our Data For that I'm going to show you a Python script I build and also a Little script to pull data from from Wikipedia so for example, I gonna write a master thesis about Anomaly detection inside reliability engineering and for me it's obviously Interesting to know about algorithms. So in my example, I gonna pull data from the English Wikipedia Using their API Which is free so you can basically use all Wikipedia articles and make your own knowledge base so you don't have to Query Google and go on to Wikipedia read through So, yeah, I'm using the algorithms isolation forest random forest and so on and So I'm going to show you a little bit about the code we basically We're basically Querying the the API of Wikipedia with our topics which are Yeah, these topics here They all executed in a loop but Yes, sometimes our topic is not really In a correct way. So Wikipedia maybe stores isolation forest with a small letter Instead of a capital letter. So we always get a redirect link Which we're gonna find with the regex I wrote here and then we request the new and suitable Redirected topic to get the actual data from Wikipedia Yeah, there's some properties just to make the class complete but we are using also the merge content to plain text where we we we get obviously the the data from Wikipedia in a JSON response and in the JSON there is HTML, but we don't want HTML because that's not really necessary. I guess OpenAI would also be able to use that but we are not using that so I'm using the pypandoc Library to convert the HTML to plain text Which is done basically here With that one line And yet from there on we save everything in our text file, which is just the yeah the actual date and What else is important to know Yeah, I think if you want to make up your own use case you just have to basically change the the content of the Basically change the the constant here so you can add whatever you want Let's say Simpsons Python and JavaScript JavaScript So then we can run this Well wrong Current file we run it we have an arrow here Because of that This is now generating our text input to vectorize and use it later on with long chain and chroma db Which is also nice because then we can actually get formulas and all this kind of stuff already converted in Latex which you can see here the the The pypandoc has actually difficulties to render it in plain text, but that's a good thing As you can see this is all the text Well, we could optimize it and yeah that would make sense to optimize it because we we Can be vectorized in chunks Which is basically done By this line here our text splitter this one splits the The text into chunks so that we can basically get our context Text um, let me show you something Embeddings Yeah, you can then see Our vectorized data like this all this stuff which is maybe fantasy just as an example is a green color and And novel is whatever in this area and then our question gets Vectorized and we can also say okay this vector Is similar to the other vectors you can see here that's just an example, but I hope you can understand and follow Yeah, and from there on it basically uses the the neighbors the nearest neighbors and then from there on it goes back to openai and From the context it can obviously answer your questions So, um, let's use Let's use the nearest file Which we just generated let's ask can you tell me the basics about isolation forest Well, you need to Uh give your your api key I've done it already in my configuration. So that should work now Yes, it seems to be working And there's our answer isolation forest is an algorithm for data anomaly detection initially developed by blah blah blah Yeah, there we go We can ask questions Upon content pieces we Provided you can basically provide any kind of data like a pdf you're going to parse or a textbook or You could even Like use some other ai Create text out of my or natural language out of my video and use it Let's ask another questions Let's ask another questions, uh, who's the who invented python Let's see if that works So It seems like it's working perfectly let's ask another question Question about linear regression Can you tell me the formula for linear regression There we go, the formula for linear regression is as you can see Um, so yeah, if you have any questions about chroma db Open ai embedding And you want to know more about it. You can go to my website Um, so yeah, if you have any questions about chroma db open ai embeddings Python or something, um Which is related to that video, please let me know in the comments. I would also appreciate If you like the video and follow me so i'm gonna Increase the frequency of creating videos I'm gonna upload all the the content and Link it into the description Thanks for watching and enjoy enjoy the the the new ai stuff and all the Yeah crazy and interesting possibilities We have bye. ByeHi, I'm Chris from SQL for Automation. Today we're going to upgrade the application we've created in the last tutorial. Now, if you haven't seen it, we've basically programmed a PLC to measure the temperature and humidity every 5 seconds, and then store it in a database. So, this application has now been running for a while, and we want to take its data and visualize it using the free software Grafana. And to do it, we're going to download and install Grafana, connect it to the database, and set up the dashboard step by step. So that by the end of this video, we will have this dashboard. Now, this dashboard is just an example to show you a few of the elements you can use in Grafana. I guess you normally wouldn't display the same information several times. Anyway, the different elements we're going to set up are the date, a clock, a text field, an image from the internet, this graph which combines two entities, a single state field, this bar graph, a small graph with a fixed time range, a graph with aggregated functions, and then finally, this power gauge. So yeah, let's start. So first, we're going to have to download it. To do it, I'm going to open my browser, go to grafana.com, click this download button, and the button here, choose my operating system, and then download the installer. Now, as soon as I have it, I can open it, execute it, and run it anyway, and then just go through all the steps. All right, so the server should now be running on the port 3000. So to open it, we can go to our browser, type in localhost with the port 3000, which brings us here, and then in here, we just enter admin with the password admin, after which it will ask us to set a new password, so we do that, click save, and we're online. Okay, so now we can set up our data source. Just click on this button here, select your data source type, and then fill out these settings here. So first, I'm going to enter a name, type in the address with the port, the database I want to use, the user and its password, and that's it. So now we can go down here, click save and test, and we should have our data source. So now we can create our first dashboard, and I'm going to do this in two parts. First, I'm going to add all the elements I want to use, and then only later change their design. So it's going to look horrible in the beginning, but don't worry about that. To start, I can click here, which will bring up a new dashboard, and because it already has an empty panel inside, we can directly add a new query. Now as you can see, it's already created an example for us, and we can use this as a template. Now what we have here is one of the two ways we can set up the query, and we're going to stick with this for now, but later we're also going to use the other one. First, if you have multiple data sources set up, you should make sure that you're accessing the correct one, then you can define which table you want to query, what column to use as the timestamp, the metric you want to display on your panel, the value you're interested in, and then finally if you want to filter or group it. So to make this a bit easier, let's maybe take a look at our database. First of all, we have to define what table we want to use. Now as you can see here, Grafana already selected the states table, and that's correct, so we don't have to change that. Next it needs to know which column it can use for the timestamp, and again, it already selected the correct one, so we can leave that as well. Which brings us to the metric column. Now with the metric column we can basically show what exactly we're displaying in the graph, and right now it's set to none, which means it's just displaying the name of the column it's using for the values. But that's not really what I want. In my case, I want to display the temperature and the humidity, and we can find that information in this column, so I'm going to select the entity as my metric. So now we just have to define what column we want to use for the values, and we're obviously interested in the states, so I'm going to select the state as my value column. So now I just need to filter the results so I can show each of my entities as a separate line. And to do this I'm just going to make a filter to only select the rows where the entity is the humidity. And then I'm going to duplicate this query so I can also display my temperature. Alright, so now since I don't want to display every little detail, I'm going to aggregate my value and only display an average. And then I'm going to give that average an alias, and finally average it for every 15 minutes. Okay. So now with these settings here you can play around a bit if you want, but again I'm not going to do that too much for now. But what we want to do is I want to display the temperature on a different y-axis. So I can click this, and then I can enter the ranges of each axis, and enter the units. Okay. So now we can also add a time region, for example the working hours. And then I'm going to remove the panel title and make it transparent. That's it. So that's our first panel. And I'm actually going to change it just a little bit. Yeah, I think that looks better. Okay. Next we're going to add the single stat here. Just click add panel, choose visualization, single stat, and then we enter pretty much the same things like before. Enter a prefix, select the unit, and display one decimal. Alright. Next will be our bar gauge. So again, add panel, choose visualization, bar gauge, and enter the query. And the rest we're going to pretty much leave for now. Just going to remove the panel title and make it transparent. Next we're going to make the single graph here. And for this graph I'm going to enter a relative time, so it's always going to display the last 24 hours, no matter what time frame I'm selecting. And then I'm going to remove all the info, remove the panel title, and make it transparent. Alright. So next will be our aggregated functions. But instead of adding them one by one, I'm going to select our single stat, duplicate it, and modify it. Okay. So now let's add the power gauge. And now we're going to add the title. We can either choose between markdown and HTML. I'm going to go with HTML. And then I just enter a paragraph with the text, and change the font size, the fall weight, and the color. Alright. So now with the same element we can also display an image from the Internet. Just going to duplicate it, and instead of the paragraph, I'm going to insert the image with the URL. And this URL is just pointing to an image on our website. And that's it. So I'm just going to paste that link into my image. I have it here. And then I can also change the style if I want. Okay. So now we're going to add our date. And this will be a bit different than the other elements. I'm going to extract the date from my table by always looking at the timestamp from our last entry. So first of all, instead of using the query builder, I'm going to edit the query directly, format it as a table, and then order the table by the timestamp descending, and limit the result to one row. And this should give us this timestamp here. Now it's not really what we're looking for yet. So we'll have to extract our date from this timestamp and format it so it looks good. Now I'm not going to explain the functions I'll be using in detail, but you should be able to pretty much just copy the syntax if you want to do the same thing. So first I'm going to display the day as a word. And I'm also going to add the day as a number, the month as a number, and the year. And that's it. So let me just remove the panel title, make it transparent. And we have our date. So this leaves us with the clock. And that one's actually a bit more complicated than the other ones. Because we want it to count up automatically, we're going to have to use a plugin we don't have yet. Luckily though, it's pretty easy to download and install a new one. You can search for Grafana plugins, and then look out for the clock plugin, which you have here. And there we go to installation and download the zip file. And then we can extract it, move it to our installation folder, and then we can restart the server. It's just very important that we save our dashboard first, because otherwise we would lose everything. Okay, so now we can go to services, search for a Grafana service, and restart it. Alright, so now we can go to our browser, refresh it, add panel, visualization, and we should find our clock plugin. There I'm just going to remove the panel title, and make it transparent, and that's it. So now we have a basic dashboard, and the only thing left to do is to make it look a bit better, and then duplicate the stuff down here to also show the humidity. So let's do that. Now the first thing I recommend is that you decide on a color theme. Now I'm going to use the yellow and blue from SQL for Automation, and black and white. Because most of the time it looks better if you don't use 20,000 different colors. So I'm just going to change these colors and a few settings, and repeat this process for every panel. Also I'm not going to narrate everything, because it's basically the same process over and over again. I'm just going to show it so you can follow along if you want to. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. So let's do that. Okay, I think we can leave it like this. You could obviously customize and upgrade this a lot more, but for this video I think it's good enough. Now, what you might have noticed during the editing is that it sometimes took quite a long time to load the panels. And that's because our database type isn't really optimized for the amount of data we put inside. So depending on your application, it can make sense to use a time series database like InfluxDB or Prometheus instead of a relational one like I'm using here. And maybe we'll cover that in a future video. So if you're interested in that or have any questions, feel free to write a comment below or visit our channel or website for more information. Thanks a lot for watching. I hope this video was helpful and I'll see you in the next tutorial.Hey guys, how are you? I'm Patrick and I'm very glad that you're listening to this voicemail To be honest if you keep listening, I might tell you a secret but let's Let's pretend to not do it Yeah, so however, I'm living here in Germany looking out of my window there are amazing birds flying in the middle of the trees It's a cloudy day around 2.56 p.m. I'm sitting here in front of my MacBook Air I opened a browser where you can see YouTube in the background and And I'm going to tell you a secret now and the secret is That it would be awesome if you could follow me on YouTube Yeah, and I hope this will work out because I'm using the whisper open AI API to Yeah ask my own Yeah, ask questions on my own mp3 or whatever Audio files you or I have on my computer